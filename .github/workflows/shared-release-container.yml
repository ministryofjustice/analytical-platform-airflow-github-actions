---
on:
  workflow_call:

permissions: {}

jobs:
  release-container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Octo STS
        id: octo_sts
        uses: ministryofjustice/analytical-platform-github-actions/octo-sts@31245f6d7852ff4fbb735ec759cf42d182f5836e # v5.0.0

      - name: Clean Actions Runner
        id: clean_actions_runner
        uses: ministryofjustice/action-clean-runner@390530713a326ddc099b2114f38dd0f2f8eac6da # v1.1.0
        with:
          confirm: true

      - name: Prepare Environment
        id: prepare_environment
        shell: bash
        run: |
          ecrRepositoryName=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/g')
          export ecrRepositoryName
          echo "ECR_REPOSITORY_NAME=${ecrRepositoryName}" >>"${GITHUB_ENV}"

      - name: Install cosign
        id: install_cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Configure AWS Credentials
        id: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          aws-region: eu-west-2
          role-to-assume: arn:aws:iam::509399598587:role/ecr-access

      - name: Log in to Amazon ECR
        id: ecr_login
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

      - name: Fetch ECR Access Policy
        id: fetch_ecr_access_policy
        shell: bash
        run: |
          curl --silent --show-error --location https://raw.githubusercontent.com/ministryofjustice/analytical-platform-airflow-github-actions/refs/heads/main/assets/ecr-access-policy/ecr-access-policy.json --output ecr-access-policy.json

      - name: Create ECR Repository
        id: create_ecr_repository
        shell: bash
        env:
          REPOSITORY: ${{ env.ECR_REPOSITORY_NAME }}
        run: |
          if [[ "$(aws ecr describe-repositories --repository-names "${REPOSITORY}" 2>&1)" == *"RepositoryNotFoundException"* ]]; then
            echo "Repository not found, creating it"
            aws ecr create-repository \
              --repository-name "${REPOSITORY}" \
              --image-tag-mutability "IMMUTABLE" \
              --image-scanning-configuration "scanOnPush=true" \
              --encryption-configuration "encryptionType=KMS,kmsKey=alias/ecr/default"
          else
            echo "Repository exists"
          fi

          aws ecr set-repository-policy \
            --repository-name "${REPOSITORY}" \
            --policy-text file://ecr-access-policy.json

      - name: Build and Push
        id: build_and_push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: true
          tags: ${{ steps.ecr_login.outputs.registry }}/${{ env.ECR_REPOSITORY_NAME }}:${{ github.ref_name }}
          build-args: |
            MOJAP_IMAGE_VERSION=${{ github.ref_name }}

      - name: Sign
        id: sign
        shell: bash
        env:
          REGISTRY: ${{ steps.ecr_login.outputs.registry }}
          REPOSITORY: ${{ env.ECR_REPOSITORY_NAME }}
          IMAGE_DIGEST: ${{ steps.build_and_push.outputs.digest }}
        run: |
          cosign sign --yes "${REGISTRY}/${REPOSITORY}@${IMAGE_DIGEST}"

      - name: Verify Signature
        id: cosign_verify
        shell: bash
        env:
          REGISTRY: ${{ steps.ecr_login.outputs.registry }}
          REPOSITORY: ${{ env.ECR_REPOSITORY_NAME }}
          IMAGE_DIGEST: ${{ steps.build_and_push.outputs.digest }}
        run: |
          cosign verify \
            --certificate-oidc-issuer="https://token.actions.githubusercontent.com" \
            --certificate-identity-regexp="https://github\.com/ministryofjustice/analytical-platform-airflow-github-actions/\.github/workflows/shared-release-container\.yml.+" \
            "${REGISTRY}/${REPOSITORY}@${IMAGE_DIGEST}"
