---
on:
  workflow_call:
    inputs:
      runtime:
        type: string
        required: true
      trivy_timeout:
        type: string
        required: false
        default: "10m0s"

permissions: {}

jobs:
  scan-container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Octo STS
        id: octo_sts
        uses: ministryofjustice/analytical-platform-github-actions/octo-sts@68ce2de03822a2ca9c6976e558331cd362271155 # v5.1.0

      - name: Clean Actions Runner
        id: clean_actions_runner
        uses: ministryofjustice/action-clean-runner@390530713a326ddc099b2114f38dd0f2f8eac6da # v1.1.0
        with:
          confirm: true

      - name: Generate .trivyignore
        id: generate_trivyignore
        shell: bash
        env:
          RUNTIME: ${{ inputs.runtime }}
        run: |
          imageVersion=$(grep "^FROM" Dockerfile | cut -d':' -f2 | cut -d'@' -f1)

          curl --silent --show-error --location "https://raw.githubusercontent.com/ministryofjustice/analytical-platform-airflow-${RUNTIME}-base/refs/tags/${imageVersion}/.trivyignore" --output "analytical-platform-airflow-${RUNTIME}-base-trivyignore"

          if [[ ! -f .trivyignore ]]; then
            mv "analytical-platform-airflow-${RUNTIME}-base-trivyignore" .trivyignore
          else
            cat "analytical-platform-airflow-${RUNTIME}-base-trivyignore" >> .trivyignore
          fi

      - name: Build
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: false
          tags: ${{ github.sha }}

      - name: Scan
        id: scan
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # v0.33.1
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db:1
        with:
          image-ref: ${{ github.sha }}
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          vuln-type: library
          timeout: ${{ inputs.trivy_timeout }}
          skip-dirs: "/home/analyticalplatform/.cache/R,/usr/local/lib/R/site-library/openssl/doc"
          exit-code: 1

      - name: Comment on Scan Success
        id: comment_on_scan_success
        if: steps.scan.outcome == 'success'
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Container scan has passed.'
            })

      - name: Comment on Scan Failure
        id: comment_on_scan_failure
        if: failure() && steps.scan.outcome == 'failure'
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Container scan has failed, please refer to the [User Guidance](https://user-guidance.analytical-platform.service.justice.gov.uk/services/airflow/index.html#vulnerability-scanning) for more information.'
            })
